
<style>
  .facet-filters{
    display: flex;
align-items: center;
  }
  .product-sort{
    padding: 0 4rem;
  }

  .filters .dropdown-menu{
    padding: 1rem 4rem;
  }
  .dropdown-menu{
    box-shadow: none;
    padding: 1rem 2rem;
  }
  .collectionImg{
    /* height: 300px !important; */
    text-align: center;
  }
  .grid__item{
    list-style: none;
  }
  #ProductGridContainer .listItemWrap{
    height: 100%;
    margin: 0 13px;
    width: 80%;
  }
  #ProductGridContainer{
    padding:  0 15rem;
  }
  .middle-container{
    padding-left: 1rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
  .middle-container span{
    margin: 0 1rem;
  }

  #ProductGridContainer .listItemWrap img{
    width: 100%;
    max-width: 280px;
    height: auto;
  }
  #ProductGridContainer ul{
    padding-left: 0;
    display: flex;
    flex-wrap: wrap;
  }
  #ProductGridContainer ul li{
    width: 25%;
    padding: 2rem 0rem;
  }

  #ProductGridContainer .listItemWrap h2{
    height: auto;
    font-size: 14px;
    line-height: 2;
  }
  @media screen and (max-width:1024px) {
    #ProductGridContainer{
      padding: 0 5rem;
    }
    #ProductGridContainer ul li{
    width: 33.3%;
    padding: 2rem;
  }
  }
  @media screen and (max-width:780px) {
    .facet-filters{
      justify-content: center;
    }
    .product-sort{
    padding: 0 1rem;
  }
    .collectionImg{
      height: 200px !important;
    }
    #ProductGridContainer{
    padding:  0 1rem;
  }
    #ProductGridContainer ul li{
    width: 50%;
    padding: 1rem 0rem;
  }
    .middle-container{
      flex-direction: column;
    }
  }
  .result-message{
    font-size: 1.8rem;
    margin-top: 3rem;
    text-align: center;
    text-transform:initial;
  }
  .filter-form{
    display: flex;
  }
  .expand-desktop{
    display: inline-block;
    visibility: visible;
  }

  .btn-group.open  .multiselect.btn,
  .multiselect.btn{
    background-color: transparent;
    border: none;
    cursor: pointer;
    box-shadow: none;
    font-size: 1.5rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.1rem;
  }
  .multiselect.btn label,
  .multiselect.btn svg
  {
    cursor: pointer;
    vertical-align: middle;
    pointer-events: none;
  }

  .multiselect.btn svg{
    transform: scale(1.3);
    vertical-align: -10%;
    margin-left: 4px;
  }
  .multiselect-container label{
    font-weight: normal;
    letter-spacing: 0.5px;
    cursor: pointer;
  }
  #selectedColor{
    margin: 1rem 0;
  }
  #clearFilters,
  #selectedColor .color{
    background: rgb(239, 239, 239);
    display: flex;
    align-items: center;
    width: 240px;
    text-align: left;
    font-size: 1.3rem;
    padding: 5px 20px;
    border-radius: 20px;
    box-shadow: none;
    border: none;
    color: #575454;
    text-transform: uppercase;
    transition: 0.2s linear;
    cursor: pointer;
  }
  #selectedColor .color{
    padding: 2px 10px;
    margin: 0 0.2rem;
    width: auto;
    display: inline-block;
  }
  #clearFilters:hover,
  #selectedColor span:hover{
    background: #bbb;
    color: #fff;
  }
  #clearFilters a:hover{
    text-decoration: none !important;
  }
  #clearFilters svg{
    margin-left: auto;
  }
  .filter-group-display__list{
    display: block;
  }
  .filter-group-display__submit{
    visibility: hidden;
    clip: rect(0,0,0,0);
    width: 0;
    height: 0;
  }
  .icon-x-sm{
    width: 7px;
    height: 7px;
  }
  .icon-x-sm-theme{
    fill: none;
    stroke: #6d6e71;
  }
</style>
{% assign respond_js_secret_key = shop.domain | md5 %}
{% unless search.terms == respond_js_secret_key %}

{% paginate search.results by 30 %}
  <section class="stepWrap">
      <div class="step-1">
         {% if search.performed %}
          {% if search.results_count == 0 %}
            <h4 class="stepByLine">{{ 'general.search.no_results_html' | t: terms: search.terms }} 1</h4>
          {% else %}
            <h4 class="stepByLine">Search Results</h4>
          {% endif %}
        {% else %}
          <h4 class="stepByLine">{{ 'general.search.title' | t }} 3</h4>
        {% endif %}
          <div class="processDividerStrip"></div>
          <div class="result-message">
            <p>We found {{ search.results_count }} items for {{search.terms}}</p>
          </div>
      </div>
  </section>
{% if search.performed %}
  <div class="product-sort">
    <div class="product-sort__sortby"> 
      <div class="facet-filters">
        <div id="sortBy" class="expand-desktop collapse" aria-expanded="false">
          <div class="select">
            {%- assign sort_by = search.sort_by | default: search.default_sort_by -%}
            <!-- <select style="display: none;" name="sort_by" id="Sort" aria-describedby="a11y-refresh-page-message">
              {%- for option in search.sort_options -%}
                <option value="{{ option.value | escape }}"{% if option.value == sort_by %} selected="selected"{% endif %}>{{ option.name | escape }}</option>
              {%- endfor -%}
            </select> -->
            <div class="btn-group">
              <button type="button" class="multiselect dropdown-toggle btn btn-default" data-toggle="dropdown" aria-expanded="false">
                <label class="max-filter" id="FilterSort" filter_value="">Sort By</label>{% render 'icon-arrow' %}
              </button>
              <ul class="multiselect-container dropdown-menu">
                {% for option in search.sort_options %}
                {% if option != blank %}
                  <label class="checkbox">
                  <input type="radio" name="multiselect_Sort" value="{{ option.value | escape }}">
                  {% if option.name == 'Price, low to high' %}
                    Lowest Price
                  {% elsif option.name == "Price, high to low" %}
                    Highest Price
                  {% else %}
                    {{ option.name }}
                  {% endif %}
                {% endif %}
                </label>
                {% endfor %}
              </ul>
            </div>
          </div>
        </div>
    <div class="collapse expand-desktop" id="filters">
      <div class="filters">
      <form class="filter-form">
        <input type="hidden" name="q" value="{{ search.terms }}">
        {%- for filter in search.filters -%}
          <details class="filter-group btn-group">
            <summary id="filter-{{ filter.label }}" class="filter-group-summary multiselect dropdown-toggle btn btn-default">
                <label class="max-filter" filter_value="">{{ filter.label }}</label>
                {%- if filter.active_values.size > 0 -%}
                  <span>({{ filter.active_values.size }})</span>
                {%- endif -%}
                {% render 'icon-arrow' %}
            </summary>
      
            <div class="filter-group-display">
              {%- case filter.type -%}
                {%- when 'list' -%}
                  <ul class="filter-group-display__list multiselect-container dropdown-menu">
                    {%- for filter_value in filter.values -%}
                      <li class="filter-group-display__list-item">
                        <label for="Filter-{{ filter.param_name }}-{{ forloop.index }}">
                        <input type="checkbox"
                          name="{{ filter_value.param_name }}"
                          value="{{ filter_value.value }}"
                          id="Filter-{{ filter.param_name }}-{{ forloop.index }}"
                          {% if filter_value.active -%}checked{%- endif %}
                          {% if filter_value.count == 0 and filter_value.active == false -%}disabled{%- endif %}
                        >{{ filter_value.label }}</label>
                      </li>
                    {%- endfor -%}
                  </ul>
                  <div class="filter-group-display__submit">
                    <input type="submit" value="Apply">
                  </div>
                {%- when 'price_range' -%}
                  <div class="filter-group-display__price-range">
                    <div class="filter-group-display__price-range-from">
                      <span>{{ cart.currency.symbol }}</span>
      
                      <input name="{{ filter.min_value.param_name }}"
                        id="Filter-{{ filter.min_value.param_name }}"
                        {% if filter.min_value.value -%}
                          value="{{ filter.min_value.value | money_without_currency | replace: ',', '' }}"
                        {%- endif %}
                        type="number"
                        placeholder="0"
                        min="0"
                        max="{{ filter.range_max | money_without_currency | replace: ',', '' }}"
                      >
      
                      <label for="Filter-{{ filter.min_value.param_name }}">From</label>
                    </div>
                    <div class="filter-group-display__price-range-to">
                      <span>{{ cart.currency.symbol }}</span>
      
                      <input name="{{ filter.max_value.param_name }}"
                        id="Filter-{{ filter.max_value.param_name }}"
                        {% if filter.max_value.value -%}
                          value="{{ filter.max_value.value | money_without_currency | replace: ',', '' }}"
                        {%- endif %}
                        type="number"
                        placeholder="{{ filter.range_max | money_without_currency | replace: ',', '' }}"
                        min="0"
                        max="{{ filter.range_max | money_without_currency | replace: ',', '' }}"
                      >
      
                      <label for="Filter-{{ filter.max_value.param_name }}">To</label>
                    </div>
                  </div>
      
                  <div class="filter-group-display__submit">
                    <input type="submit" value="Apply">
                  </div>
              {%- endcase -%}
            </div>
          </details>
        {%- endfor -%}
      

      </form>
    </div>
    </div>

    </div>
    <div class="middle-container">
      <div class="active-filters">
        <a id="clearFilters" href="{{ routes.search_url }}?sort_by={{ search.sort_by }}&q={{ search.terms }}" class="active-filters__clear">Clear all

          <svg class="icon-x-sm" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 7.71 7.71">
            <g>
                <g>
                    <g>
                        <path class="icon-x-sm-theme" d="M1,.75l7,7" transform="translate(-0.65 -0.4)"></path>
                        <path class="icon-x-sm-theme" d="M8,.75l-7,7" transform="translate(-0.65 -0.4)"></path>
                    </g>
                </g>
            </g>
        </svg>
        </a>
    
        <div id="selectedColor">

        </div>
        <!-- {%- for filter in search.filters -%}
          {%- if filter.type == "price_range" -%}
            {%- if filter.min_value.value != nil or filter.max_value.value != nil -%}
              <a class="active-filters__remove-filter" href="{{ filter.url_to_remove }}">
                {%- assign min_value = filter.min_value.value | default: 0 -%}
                {%- assign max_value = filter.max_value.value | default: filter.range_max -%}
                {{ min_value | money }} - {{ max_value | money }} X
              </a>
            {%- endif -%}
          {%- else -%}
            {%- for filter_value in filter.active_values -%}
              <a class="active-filters__remove-filter" href="{{ filter_value.url_to_remove }}">
                {{ filter_value.label }}
              </a>
            {%- endfor -%}
          {%- endif- %}
        {%- endfor -%} -->
      </div>
    {%- if paginate.pages > 1 -%}
      <div class="pagination">
        {{ paginate | default_pagination }}
      </div>
    {%- endif -%}

    </div>
  </div>
  </div>
  <div id="ProductGridContainer">
      {% paginate search.results by 24 %}
        <div class="template-search__results collection page-width" id="product-grid" data-id="{{ section.id }}">
          <div class="loading-overlay gradient"></div>
          <ul class="grid grid--4-col-desktop grid--3-col-tablet grid--2-col grid--one-third-max grid--quarter-max negative-margin product-grid" role="list">
            {%- for item in search.results -%}
            {% if item.object_type == 'product' %} 
                <li class="grid__item"
                >
                  {%- case item.object_type -%}
                    {%- when 'product' -%}
                    <a href="{{ item.url | within: collection }}" class="grid__image">
                      <div class="listItemWrap" >
                          <figure class="collectionImg">
                            {% if item.metafields.custom_fields["promotion_text"] != blank %}
                                <span class="special">{{ item.metafields.custom_fields["promotion_text"] }}</span>
                            {% elsif item.metafields.custom_fields["main_image_banner"] != blank  %}
                                <span class="imgbanner">{{ item.metafields.custom_fields["main_image_banner"] }}</span>
                            {% elsif item.price < item.compare_at_price_min %}
                                      <span class="special">SPECIAL</span>
                              {% endif %}
                            <img loading="lazy" width="{{item.featured_image.width}}" height="{{item.featured_image.height}}" src="{{ item.featured_image.src | img_url: 'large' }}" alt="{{ item.featured_image.alt | escape }}">
                          </figure>
                        <h2>{{ item.title }}</h2>
                        <div class="price" style="text-align:center">
                          {% if item.price < item.compare_at_price_min %}
                              <span class="strikeout">{{ item.compare_at_price_min | money }}</span>
                          {% endif %}
                          {{ item.price | money }} 
                        </div>
                        <div id="options"></div>
                      </div>
                    </a>
                  {%- endcase -%}
                </li>
              {% endif %}
            {%- endfor -%}
          </ul>
        </div>
      {% endpaginate %}    
    {%- endif -%}
  </div> 
{% endpaginate %}

{% else %}
  {% render 'respond' %}
  {% layout none %}
{% endunless %}

<script defer>
  var selectedTags = [];
  $('#sortBy').change(function (e) { 
    e.preventDefault();
    const selectedSort = $("input[type='radio']:checked").val();
    const url = window.location + '&filter.v.price.gte=&filter.v.price.lte=&sort_by=' + selectedSort;
    renderSectionFromFetch(url);
  });
  
  function filterProducts(selectedTags) {
        var sizeOptions = [],
            colorOptions = [];

        $('#ProductGridContainer ul').children().each(function () {
          const tags = $(this).attr('data-sizes') + $(this).attr('data-colors');
          console.log(tags);
          $(this).removeClass('hidden');
          for (let index = 0; index < selectedTags.length; index++) {
            const tag = selectedTags[index];
            if(tags.indexOf(tag) === -1){
              $(this).addClass('hidden');
            }
            return
          }
          
        })
      }
 
  function renderSectionFromFetch(url) {
    fetch(url)
      .then(response => response.text())
      .then((responseText) => {
        const html = responseText;
        renderProductGridContainer(html)
      });
  }



  function renderProductGridContainer(html) {
    document.getElementById('ProductGridContainer').innerHTML = new DOMParser().parseFromString(html, 'text/html').getElementById('ProductGridContainer').innerHTML;
    filterProducts(selectedTags);
  }

  function setSelectedColor() {
    let selectedColor = [];
    $('#selectedColor').empty();
    $('input[name="filter.v.option.color"]').each(function () {
      if($(this).attr('checked')){
        selectedColor.push($(this).val())
      }
      })
    
      if (selectedColor.length > 0) {
      $('#selectedColor').append('<span>Color:</span>');;        
      for (let index = 0; index < selectedColor.length; index++) {
        const newNode = $(`<span class="color">${selectedColor[index]}</span>`);
        $('#selectedColor').append(newNode);;        
      }

      // update products
      $('#ProductGridContainer').children().each(function (item) {
        var producturl = window.location.hostname + $(this).find('a').attr('href');
        console.log(producturl);
        getVariantOptions('https://'+ producturl);
      })
    }
  }
  function getVariantOptions(producturl) {
    fetch(producturl)
      .then(response => response.text())
      .then((responseText) => {
        const producthtml = responseText;
        document.getElementById('options').innerHTML = new DOMParser().parseFromString(html, 'text/html').querySelector('#AddToCartForm').innerHTML;
      });
  }
 $('form.filter-form').click(function (e) {
   if(e.target.tagName === "INPUT"){
   $(this).submit();
   }
  })

  $(document).ready(function () {
   setSelectedColor()
  });
</script>